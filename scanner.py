import requests
from urllib.parse import urljoin
from utils import find_forms, is_vulnerable_to_sql_injection, is_vulnerable_to_xss
from report import generate_report  # Import the report generation function

def scan(url):
    print(f"Scanning {url} for vulnerabilities...")

    scan_results = []  # Store results to pass to the report function

    try:
        response = requests.get(url)
        if response.status_code == 200:
            forms = find_forms(response.text)
            if forms:
                print(f"Found {len(forms)} forms in {url}.")
                for form in forms:
                    result = {"title": "", "body": ""}
                    # Check for SQL Injection
                    if is_vulnerable_to_sql_injection(url, form):
                        result["title"] = "SQL Injection Vulnerability"
                        result["body"] += "SQL Injection vulnerability found in form on page...\n"
                    # Check for XSS
                    if is_vulnerable_to_xss(url, form):
                        result["title"] = "XSS Vulnerability"
                        result["body"] += "Cross-Site Scripting vulnerability found in form on page...\n"
                    if result["body"]:
                        scan_results.append(result)
            else:
                print("No forms found.")
        else:
            print(f"Failed to access {url} (Status Code: {response.status_code})")
    except requests.exceptions.RequestException as e:
        print(f"Error connecting to {url}: {e}")

    # Generate report
    if scan_results:
        generate_report(scan_results)
    else:
        print("No vulnerabilities found to report.")

    return scan_results




